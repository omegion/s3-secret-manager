// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/omegion/s3-secret-manager/internal/s3 (interfaces: APIInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	reflect "reflect"

	s3 "github.com/aws/aws-sdk-go-v2/service/s3"
	gomock "github.com/golang/mock/gomock"
	s30 "github.com/omegion/s3-secret-manager/internal/s3"
)

// MockAPIInterface is a mock of APIInterface interface.
type MockAPIInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAPIInterfaceMockRecorder
}

// MockAPIInterfaceMockRecorder is the mock recorder for MockAPIInterface.
type MockAPIInterfaceMockRecorder struct {
	mock *MockAPIInterface
}

// NewMockAPIInterface creates a new mock instance.
func NewMockAPIInterface(ctrl *gomock.Controller) *MockAPIInterface {
	mock := &MockAPIInterface{ctrl: ctrl}
	mock.recorder = &MockAPIInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIInterface) EXPECT() *MockAPIInterfaceMockRecorder {
	return m.recorder
}

// DeleteObject mocks base method.
func (m *MockAPIInterface) DeleteObject(arg0 *s30.DeleteObjectOptions) (*s3.DeleteObjectOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteObject", arg0)
	ret0, _ := ret[0].(*s3.DeleteObjectOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteObject indicates an expected call of DeleteObject.
func (mr *MockAPIInterfaceMockRecorder) DeleteObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteObject", reflect.TypeOf((*MockAPIInterface)(nil).DeleteObject), arg0)
}

// GetObject mocks base method.
func (m *MockAPIInterface) GetObject(arg0 *s30.GetObjectOptions) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObject", arg0)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObject indicates an expected call of GetObject.
func (mr *MockAPIInterfaceMockRecorder) GetObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObject", reflect.TypeOf((*MockAPIInterface)(nil).GetObject), arg0)
}

// PutObject mocks base method.
func (m *MockAPIInterface) PutObject(arg0 *s30.PutObjectOptions) (*s3.PutObjectOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutObject", arg0)
	ret0, _ := ret[0].(*s3.PutObjectOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutObject indicates an expected call of PutObject.
func (mr *MockAPIInterfaceMockRecorder) PutObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutObject", reflect.TypeOf((*MockAPIInterface)(nil).PutObject), arg0)
}
